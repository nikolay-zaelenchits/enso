---
import Button from "../button/Button.astro";
import Input2 from "../input/Input2.astro";
---

<div class="signup">
    <div class="signup-content">
        <div class="signup-social">
            <div class="signup-social-title">RECEIVE OUR NEWSLETTER</div>
            <!--<div class="signup-social-txt">Sign up to the ENSO Memo to get our latest news and updates, keeping you in the loop about our activities, events and latest innovations. For more frequent updates please follow us on social media.</div>-->
            <div class="signup-social-txt">Sign up to our newsletter to get regular updates.</div>
            <div class="signup-social-txt">For more frequent news please follow us on social media.</div>
        </div>
        <div class="signup-form">
            <div class="signup-form-field">
                <Input2 idx="email-field" label="Enter your email address"/>
            </div>
            <div class="signup-form-result">
                <div class="signup-form-result-ok">
                    Thank you!
                </div>
                <div class="signup-form-result-err">
                    Something went wrong...
                </div>
            </div>
            <!--
                <div class="signup-btn-row">
                            <Button>Contact Us</Button>
                        </div>
                        -->
        </div>
    </div>

    <!--
    {"list_ids":["e03f823e-448d-4b64-8b61-f07829ce1a38"],"contacts":[{"email":"n.zaelenchits@reply.com","custom_fields":{"e3_T":"euregion"},"app":"enso"}]}
    -->

</div>

<script is:inline>

    const eField = document.getElementById('email-field');
    const eFieldBox = document.querySelector('.signup-form-field');
    const eFieldBtn = document.querySelector('.signup-form-field svg');
    const formOk = document.querySelector('.signup-form-result-ok');
    const formErr = document.querySelector('.signup-form-result-err');

    const isEmailValid = (email) => {
        return /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i.test(email);
    }

    const subscribe = async () => {
        const email = eField.value;
        if (!isEmailValid(email)) {
            return;
        }

        const CONSTANTS = {
            SENDGRID_MARKETING_URL: 'https://api.sendgrid.com/v3/marketing/contacts',
            SENDGRID_MARKETING_KEY: 'Bearer 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',
            MEMO_LIST_ID: 'e03f823e-448d-4b64-8b61-f07829ce1a38',
        }

        try {
            const response = await fetch(CONSTANTS.SENDGRID_MARKETING_URL, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                    Authorization: CONSTANTS.SENDGRID_MARKETING_KEY,
                },
                body: JSON.stringify({
                    list_ids: [CONSTANTS.MEMO_LIST_ID],
                    contacts: [
                        {
                            email: email,
                            // custom_fields: {
                            //     [CONSTANTS.SENDGRID_MEMO_VALUE_FIELD_ID]: values.region
                            // },
                            app: 'enso'
                        }
                    ]
                }),
            })
            const subscription = await response.json()
            if (subscription) {
                console.log('subscription OK');
                console.log(subscription);

                formOk.classList.add('play');
                setTimeout(() => {
                    formOk.classList.remove('play');
                }, 5000);
                eField.value = "";
                emailFieldEvent();
                return;

            } else {
                console.log('subscription FAIL');
                console.log(response);
            }
        } catch (error) {
            console.log('subscription ERR');
            console.log(error);
        }

        formErr.classList.add('play');
        setTimeout(() => {
            formErr.classList.remove('play');
        }, 5000);
    }

    const emailFieldEvent = () => {
        eFieldBox.classList.remove('valid');
        eFieldBox.classList.remove('error');

        const email = eField.value;
        if (!email) {
            return;
        }

        if (isEmailValid(email)) {
            eFieldBox.classList.add('valid');
        } else {
            eFieldBox.classList.add('error');
        }
    }

    eField.addEventListener('keyup', () => {
        emailFieldEvent();
    });

    eFieldBtn.addEventListener('click', () => {
        subscribe();
    });

</script>

<style lang="scss" is:global>
    .signup {
        padding-left: 90px;
        padding-right: 90px;

        padding-top: 120px;
        padding-bottom: 120px;

        background-color: var(--clr-main);

        &,
        & * {
            transition: all .3s;
        }

        .signup-content {
            display: flex;
            align-items: center;

            .signup-social {
                padding-right: 10%;

                width: 60%;

                & > div {
                    margin-top: 10px;
                    margin-bottom: 10px;
                }

                font-family: BrandonGrotesque;

                .signup-social-title {
                    font-size: 20px;
                    font-weight: bold;

                    color: var(--clr-lightest);
                }

                .signup-social-txt {
                    font-size: 17px;
                    //font-weight: bold;
                    color: var(--clr-lightest);
                }
            }

            .signup-form {
                display: flex;
                flex-direction: column;

                width: 40%;

                > div {
                    margin: 10px 0;
                }

                .signup-form-field {
                    width: 60%;

                    &.error {
                        svg {
                            transform: rotate(-135deg);
                            color: darkred;
                        }
                    }

                    &.valid {
                        svg {
                            color: var(--clr-main);
                            height: 27px;
                            width: 27px;
                            border: 1px solid var(--clr-main);
                            border-radius: 3px;
                            cursor: pointer;
                        }
                    }
                }

                .signup-btn-row {
                    margin-top: 20px;
                    margin-bottom: 20px;
                    display: flex;
                }

                .signup-form-result {
                    position: relative;

                    .signup-form-result-err,
                    .signup-form-result-ok {
                        color: var(--clr-lightest);
                        font-size: 0;
                        position: absolute;

                        &.play {
                            font-size: 16px;
                        }
                    }
                }

            }
        }

        @media only screen and (max-width: 1100px) {
            padding-left: 25px;
            padding-right: 25px;

            padding-top: 50px;
            padding-bottom: 50px;

            .signup-content {
                .signup-social {
                    width: auto;
                    padding-right: 25px;
                }

                .signup-form {
                    width: 100%;
                }
            }
        }

        @media only screen and (max-width: 600px) {
            .signup-content {
                flex-direction: column;

                & > div {
                    width: 100%;
                }
            }
        }
    }
</style>
